{"remainingRequest":"/home/hugo_leguillier/tinygram-2022-2023/front/node_modules/thread-loader/dist/cjs.js!/home/hugo_leguillier/tinygram-2022-2023/front/node_modules/babel-loader/lib/index.js!/home/hugo_leguillier/tinygram-2022-2023/front/node_modules/vuetify/lib/util/colorUtils.mjs","dependencies":[{"path":"/home/hugo_leguillier/tinygram-2022-2023/front/node_modules/vuetify/lib/util/colorUtils.mjs","mtime":1668093900332},{"path":"/home/hugo_leguillier/tinygram-2022-2023/front/babel.config.js","mtime":1668093862815},{"path":"/home/hugo_leguillier/tinygram-2022-2023/front/node_modules/@vue/cli-plugin-babel/node_modules/cache-loader/dist/cjs.js","mtime":1668093903975},{"path":"/home/hugo_leguillier/tinygram-2022-2023/front/node_modules/thread-loader/dist/cjs.js","mtime":1668093903990},{"path":"/home/hugo_leguillier/tinygram-2022-2023/front/node_modules/babel-loader/lib/index.js","mtime":1668093897906}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["../../src/util/colorUtils.ts"],"names":["consoleWarn","chunk","padEnd","sRGB","CIELAB","rgb","c","color","char","parseInt","name","isNaN","hexColor","colorName","colorModifier","colors","currentTheme","intToHex","colorToInt","a","f","n","k","h","v","Math","r","g","b","s","rgba","max","min","hsv","l","sprime","RGBAtoCSS","toHex","hex","HexToRGBA","RGBAtoHSVA","RGBAtoHex","HSVAtoRGBA","x","classToHex","Object","parseHex","int","lab","amount","l1","getLuma","l2","light","dark"],"mappings":"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","sourcesContent":["// Utilities\nimport { consoleWarn } from './console'\nimport { chunk, padEnd } from './helpers'\nimport * as sRGB from '@/util/color/transformSRGB'\nimport * as CIELAB from '@/util/color/transformCIELAB'\n\n// Types\nimport type { ThemeDefinition } from '@/composables/theme'\n\nexport type ColorInt = number\nexport type XYZ = [number, number, number]\nexport type LAB = [number, number, number]\nexport type HSV = { h: number, s: number, v: number }\nexport type HSVA = HSV & { a: number }\nexport type RGB = { r: number, g: number, b: number }\nexport type RGBA = RGB & { a: number }\nexport type HSL = { h: number, s: number, l: number }\nexport type HSLA = HSL & { a: number }\nexport type Hex = string\nexport type Hexa = string\nexport type Color = string | number | {}\n\nexport function isCssColor (color?: string | null | false): boolean {\n  return !!color && /^(#|var\\(--|(rgb|hsl)a?\\()/.test(color)\n}\n\nexport function colorToInt (color: Color): ColorInt {\n  let rgb\n\n  if (typeof color === 'number') {\n    rgb = color\n  } else if (typeof color === 'string') {\n    let c = color.startsWith('#') ? color.substring(1) : color\n    if (c.length === 3) {\n      c = c.split('').map(char => char + char).join('')\n    }\n    if (c.length !== 6) {\n      consoleWarn(`'${color}' is not a valid rgb color`)\n    }\n    rgb = parseInt(c, 16)\n  } else {\n    throw new TypeError(`Colors can only be numbers or strings, recieved ${color == null ? color : color.constructor.name} instead`)\n  }\n\n  if (rgb < 0) {\n    consoleWarn(`Colors cannot be negative: '${color}'`)\n    rgb = 0\n  } else if (rgb > 0xffffff || isNaN(rgb)) {\n    consoleWarn(`'${color}' is not a valid rgb color`)\n    rgb = 0xffffff\n  }\n\n  return rgb\n}\n\nexport function classToHex (\n  color: string,\n  colors: Record<string, Record<string, string>>,\n  currentTheme: Partial<ThemeDefinition['colors']>,\n): string {\n  const [colorName, colorModifier] = color\n    .toString().trim().replace('-', '').split(' ', 2) as (string | undefined)[]\n\n  let hexColor = ''\n  if (colorName && colorName in colors) {\n    if (colorModifier && colorModifier in colors[colorName]) {\n      hexColor = colors[colorName][colorModifier]\n    } else if ('base' in colors[colorName]) {\n      hexColor = colors[colorName].base\n    }\n  } else if (colorName && colorName in currentTheme) {\n    hexColor = currentTheme[colorName] as string\n  }\n\n  return hexColor\n}\n\nexport function intToHex (color: ColorInt): string {\n  let hexColor: string = color.toString(16)\n\n  if (hexColor.length < 6) hexColor = '0'.repeat(6 - hexColor.length) + hexColor\n\n  return '#' + hexColor\n}\n\nexport function colorToHex (color: Color): string {\n  return intToHex(colorToInt(color))\n}\n\n/**\n * Converts HSVA to RGBA. Based on formula from https://en.wikipedia.org/wiki/HSL_and_HSV\n *\n * @param color HSVA color as an array [0-360, 0-1, 0-1, 0-1]\n */\nexport function HSVAtoRGBA (hsva: HSVA): RGBA {\n  const { h, s, v, a } = hsva\n  const f = (n: number) => {\n    const k = (n + (h / 60)) % 6\n    return v - v * s * Math.max(Math.min(k, 4 - k, 1), 0)\n  }\n\n  const rgb = [f(5), f(3), f(1)].map(v => Math.round(v * 255))\n\n  return { r: rgb[0], g: rgb[1], b: rgb[2], a }\n}\n\n/**\n * Converts RGBA to HSVA. Based on formula from https://en.wikipedia.org/wiki/HSL_and_HSV\n *\n * @param color RGBA color as an array [0-255, 0-255, 0-255, 0-1]\n */\nexport function RGBAtoHSVA (rgba: RGBA): HSVA {\n  if (!rgba) return { h: 0, s: 1, v: 1, a: 1 }\n\n  const r = rgba.r / 255\n  const g = rgba.g / 255\n  const b = rgba.b / 255\n  const max = Math.max(r, g, b)\n  const min = Math.min(r, g, b)\n\n  let h = 0\n\n  if (max !== min) {\n    if (max === r) {\n      h = 60 * (0 + ((g - b) / (max - min)))\n    } else if (max === g) {\n      h = 60 * (2 + ((b - r) / (max - min)))\n    } else if (max === b) {\n      h = 60 * (4 + ((r - g) / (max - min)))\n    }\n  }\n\n  if (h < 0) h = h + 360\n\n  const s = max === 0 ? 0 : (max - min) / max\n  const hsv = [h, s, max]\n\n  return { h: hsv[0], s: hsv[1], v: hsv[2], a: rgba.a }\n}\n\nexport function HSVAtoHSLA (hsva: HSVA): HSLA {\n  const { h, s, v, a } = hsva\n\n  const l = v - (v * s / 2)\n\n  const sprime = l === 1 || l === 0 ? 0 : (v - l) / Math.min(l, 1 - l)\n\n  return { h, s: sprime, l, a }\n}\n\nexport function HSLAtoHSVA (hsl: HSLA): HSVA {\n  const { h, s, l, a } = hsl\n\n  const v = l + s * Math.min(l, 1 - l)\n\n  const sprime = v === 0 ? 0 : 2 - (2 * l / v)\n\n  return { h, s: sprime, v, a }\n}\n\nexport function RGBAtoCSS (rgba: RGBA): string {\n  return `rgba(${rgba.r}, ${rgba.g}, ${rgba.b}, ${rgba.a})`\n}\n\nexport function RGBtoCSS (rgba: RGBA): string {\n  return RGBAtoCSS({ ...rgba, a: 1 })\n}\n\nexport function RGBAtoHex (rgba: RGBA): Hex {\n  const toHex = (v: number) => {\n    const h = Math.round(v).toString(16)\n    return ('00'.substr(0, 2 - h.length) + h).toUpperCase()\n  }\n\n  return `#${[\n    toHex(rgba.r),\n    toHex(rgba.g),\n    toHex(rgba.b),\n    toHex(Math.round(rgba.a * 255)),\n  ].join('')}`\n}\n\nexport function HexToRGBA (hex: Hex): RGBA {\n  const rgba = chunk(hex.slice(1), 2).map((c: string) => parseInt(c, 16))\n\n  return {\n    r: rgba[0],\n    g: rgba[1],\n    b: rgba[2],\n    a: Math.round((rgba[3] / 255) * 100) / 100,\n  }\n}\n\nexport function HexToHSVA (hex: Hex): HSVA {\n  const rgb = HexToRGBA(hex)\n  return RGBAtoHSVA(rgb)\n}\n\nexport function HSVAtoHex (hsva: HSVA): Hex {\n  return RGBAtoHex(HSVAtoRGBA(hsva))\n}\n\nexport function parseHex (hex: string): Hex {\n  if (hex.startsWith('#')) {\n    hex = hex.slice(1)\n  }\n\n  hex = hex.replace(/([^0-9a-f])/gi, 'F')\n\n  if (hex.length === 3 || hex.length === 4) {\n    hex = hex.split('').map(x => x + x).join('')\n  }\n\n  if (hex.length === 6) {\n    hex = padEnd(hex, 8, 'F')\n  } else {\n    hex = padEnd(padEnd(hex, 6), 8, 'F')\n  }\n\n  return `#${hex}`.toUpperCase().substr(0, 9)\n}\n\nexport function parseGradient (\n  gradient: string,\n  colors: Record<string, Record<string, string>>,\n  currentTheme: Partial<ThemeDefinition['colors']>,\n) {\n  return gradient.replace(/([a-z]+(\\s[a-z]+-[1-5])?)(?=$|,)/gi, x => {\n    return classToHex(x, colors, currentTheme) || x\n  }).replace(/(rgba\\()#[0-9a-f]+(?=,)/gi, x => {\n    return 'rgba(' + Object.values(HexToRGBA(parseHex(x.replace(/rgba\\(/, '')))).slice(0, 3).join(',')\n  })\n}\n\nexport function RGBtoInt (rgba: RGBA): ColorInt {\n  return (rgba.r << 16) + (rgba.g << 8) + rgba.b\n}\n\nexport function colorToRGB (color: string) {\n  const int = colorToInt(color)\n\n  return {\n    r: (int & 0xFF0000) >> 16,\n    g: (int & 0xFF00) >> 8,\n    b: (int & 0xFF),\n  }\n}\n\nexport function lighten (value: ColorInt, amount: number): ColorInt {\n  const lab = CIELAB.fromXYZ(sRGB.toXYZ(value))\n  // TODO: why this false positive?\n  // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n  lab[0] = lab[0] + amount * 10\n\n  return sRGB.fromXYZ(CIELAB.toXYZ(lab))\n}\n\nexport function darken (value: ColorInt, amount: number): ColorInt {\n  const lab = CIELAB.fromXYZ(sRGB.toXYZ(value))\n  lab[0] = lab[0] - amount * 10\n\n  return sRGB.fromXYZ(CIELAB.toXYZ(lab))\n}\n\n/**\n * Calculate the relative luminance of a given color\n * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n */\nexport function getLuma (color: Color) {\n  const rgb = colorToInt(color)\n\n  return sRGB.toXYZ(rgb)[1]\n}\n\n/**\n * Returns the contrast ratio (1-21) between two colors.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function getContrast (first: Color, second: Color) {\n  const l1 = getLuma(first)\n  const l2 = getLuma(second)\n\n  const light = Math.max(l1, l2)\n  const dark = Math.min(l1, l2)\n\n  return (light + 0.05) / (dark + 0.05)\n}\n"]}]}