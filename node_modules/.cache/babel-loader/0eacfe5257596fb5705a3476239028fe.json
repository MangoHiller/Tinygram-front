{"remainingRequest":"/home/hugo_leguillier/tinygram-2022-2023/front/node_modules/thread-loader/dist/cjs.js!/home/hugo_leguillier/tinygram-2022-2023/front/node_modules/babel-loader/lib/index.js!/home/hugo_leguillier/tinygram-2022-2023/front/node_modules/vuetify/lib/directives/intersect/index.mjs","dependencies":[{"path":"/home/hugo_leguillier/tinygram-2022-2023/front/node_modules/vuetify/lib/directives/intersect/index.mjs","mtime":1668093900332},{"path":"/home/hugo_leguillier/tinygram-2022-2023/front/babel.config.js","mtime":1668093862815},{"path":"/home/hugo_leguillier/tinygram-2022-2023/front/node_modules/@vue/cli-plugin-babel/node_modules/cache-loader/dist/cjs.js","mtime":1668093903975},{"path":"/home/hugo_leguillier/tinygram-2022-2023/front/node_modules/thread-loader/dist/cjs.js","mtime":1668093903990},{"path":"/home/hugo_leguillier/tinygram-2022-2023/front/node_modules/babel-loader/lib/index.js","mtime":1668093897906}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8gVXRpbHMKaW1wb3J0IHsgU1VQUE9SVFNfSU5URVJTRUNUSU9OIH0gZnJvbSAiLi4vLi4vdXRpbC9pbmRleC5tanMiOyAvLyBUeXBlcwoKZnVuY3Rpb24gbW91bnRlZChlbCwgYmluZGluZykgewogIGlmICghU1VQUE9SVFNfSU5URVJTRUNUSU9OKSByZXR1cm47CiAgY29uc3QgbW9kaWZpZXJzID0gYmluZGluZy5tb2RpZmllcnMgfHwge307CiAgY29uc3QgdmFsdWUgPSBiaW5kaW5nLnZhbHVlOwogIGNvbnN0IHsKICAgIGhhbmRsZXIsCiAgICBvcHRpb25zCiAgfSA9IHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgPyB2YWx1ZSA6IHsKICAgIGhhbmRsZXI6IHZhbHVlLAogICAgb3B0aW9uczoge30KICB9OwogIGNvbnN0IG9ic2VydmVyID0gbmV3IEludGVyc2VjdGlvbk9ic2VydmVyKChlbnRyaWVzID0gW10sIG9ic2VydmVyKSA9PiB7CiAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi8KICAgIGlmICghZWwuX29ic2VydmUpIHJldHVybjsgLy8gSnVzdCBpbiBjYXNlLCBzaG91bGQgbmV2ZXIgZmlyZQoKICAgIGNvbnN0IGlzSW50ZXJzZWN0aW5nID0gZW50cmllcy5zb21lKGVudHJ5ID0+IGVudHJ5LmlzSW50ZXJzZWN0aW5nKTsgLy8gSWYgaXMgbm90IHF1aWV0IG9yIGhhcyBhbHJlYWR5IGJlZW4KICAgIC8vIGluaXR0ZWQsIGludm9rZSB0aGUgdXNlciBjYWxsYmFjawoKICAgIGlmIChoYW5kbGVyICYmICghbW9kaWZpZXJzLnF1aWV0IHx8IGVsLl9vYnNlcnZlLmluaXQpICYmICghbW9kaWZpZXJzLm9uY2UgfHwgaXNJbnRlcnNlY3RpbmcgfHwgIWVsLl9vYnNlcnZlLmluaXQpKSB7CiAgICAgIGhhbmRsZXIoaXNJbnRlcnNlY3RpbmcsIGVudHJpZXMsIG9ic2VydmVyKTsKICAgIH0KCiAgICBpZiAoaXNJbnRlcnNlY3RpbmcgJiYgbW9kaWZpZXJzLm9uY2UpIHVubW91bnRlZChlbCk7ZWxzZSBlbC5fb2JzZXJ2ZS5pbml0ID0gdHJ1ZTsKICB9LCBvcHRpb25zKTsKICBlbC5fb2JzZXJ2ZSA9IHsKICAgIGluaXQ6IGZhbHNlLAogICAgb2JzZXJ2ZXIKICB9OwogIG9ic2VydmVyLm9ic2VydmUoZWwpOwp9CgpmdW5jdGlvbiB1bm1vdW50ZWQoZWwpIHsKICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi8KICBpZiAoIWVsLl9vYnNlcnZlKSByZXR1cm47CgogIGVsLl9vYnNlcnZlLm9ic2VydmVyLnVub2JzZXJ2ZShlbCk7CgogIGRlbGV0ZSBlbC5fb2JzZXJ2ZTsKfQoKZXhwb3J0IGNvbnN0IEludGVyc2VjdCA9IHsKICBtb3VudGVkLAogIHVubW91bnRlZAp9OwpleHBvcnQgZGVmYXVsdCBJbnRlcnNlY3Q7"},{"version":3,"sources":["../../../src/directives/intersect/index.ts"],"names":["SUPPORTS_INTERSECTION","modifiers","binding","value","options","handler","observer","entries","el","isIntersecting","entry","unmounted","init","Intersect"],"mappings":"AAAA;SACSA,qB,gCAET;;AAoBA,SAAA,OAAA,CAAA,EAAA,EAAA,OAAA,EAAqE;AACnE,MAAI,CAAJ,qBAAA,EAA4B;AAE5B,QAAMC,SAAS,GAAGC,OAAO,CAAPA,SAAAA,IAAlB,EAAA;AACA,QAAMC,KAAK,GAAGD,OAAO,CAArB,KAAA;AACA,QAAM;AAAA,IAAA,OAAA;AAAWE,IAAAA;AAAX,MAAuB,OAAA,KAAA,KAAA,QAAA,GAAA,KAAA,GAEzB;AAAEC,IAAAA,OAAO,EAAT,KAAA;AAAkBD,IAAAA,OAAO,EAAE;AAA3B,GAFJ;AAIA,QAAME,QAAQ,GAAG,IAAA,oBAAA,CAAyB,CACxCC,OAAoC,GADI,EAAA,EAAA,QAAA,KAGrC;AACH;AACA,QAAI,CAACC,EAAE,CAAP,QAAA,EAFG,OAAA,CAEsB;;AAEzB,UAAMC,cAAc,GAAGF,OAAO,CAAPA,IAAAA,CAAaG,KAAK,IAAIA,KAAK,CAJ/C,cAIoBH,CAAvB,CAJG,CAMH;AACA;;AACA,QACEF,OAAO,KACL,CAACJ,SAAS,CAAV,KAAA,IACAO,EAAE,CAAFA,QAAAA,CAFFH,IAAO,CAAPA,KAIE,CAACJ,SAAS,CAAV,IAAA,IAAA,cAAA,IAEA,CAACO,EAAE,CAAFA,QAAAA,CAPL,IACEH,CADF,EASE;AACAA,MAAAA,OAAO,CAAA,cAAA,EAAA,OAAA,EAAPA,QAAO,CAAPA;AACD;;AAED,QAAII,cAAc,IAAIR,SAAS,CAA/B,IAAA,EAAsCU,SAAS,CAA/C,EAA+C,CAATA,CAAtC,KACKH,EAAE,CAAFA,QAAAA,CAAAA,IAAAA,GAAAA,IAAAA;AAzBU,GAAA,EAAjB,OAAiB,CAAjB;AA4BAA,EAAAA,EAAE,CAAFA,QAAAA,GAAc;AAAEI,IAAAA,IAAI,EAAN,KAAA;AAAeN,IAAAA;AAAf,GAAdE;AAEAF,EAAAA,QAAQ,CAARA,OAAAA,CAAAA,EAAAA;AACD;;AAED,SAAA,SAAA,CAAA,EAAA,EAAqC;AACnC;AACA,MAAI,CAACE,EAAE,CAAP,QAAA,EAAkB;;AAElBA,EAAAA,EAAE,CAAFA,QAAAA,CAAAA,QAAAA,CAAAA,SAAAA,CAAAA,EAAAA;;AACA,SAAOA,EAAE,CAAT,QAAA;AACD;;AAED,OAAO,MAAMK,SAAuC,GAAG;AAAA,EAAA,OAAA;AAErDF,EAAAA;AAFqD,CAAhD;AAKP,eAAA,SAAA","sourcesContent":["// Utils\nimport { SUPPORTS_INTERSECTION } from '@/util'\n\n// Types\nimport type {\n  DirectiveBinding,\n  ObjectDirective,\n} from 'vue'\n\ntype ObserveHandler = (\n  isIntersecting: boolean,\n  entries: IntersectionObserverEntry[],\n  observer: IntersectionObserver,\n) => void\n\nexport interface ObserveDirectiveBinding extends Omit<DirectiveBinding, 'modifiers' | 'value'> {\n  value?: ObserveHandler | { handler: ObserveHandler, options?: IntersectionObserverInit }\n  modifiers: {\n    once?: boolean\n    quiet?: boolean\n  }\n}\n\nfunction mounted (el: HTMLElement, binding: ObserveDirectiveBinding) {\n  if (!SUPPORTS_INTERSECTION) return\n\n  const modifiers = binding.modifiers || {}\n  const value = binding.value\n  const { handler, options } = typeof value === 'object'\n    ? value\n    : { handler: value, options: {} }\n\n  const observer = new IntersectionObserver((\n    entries: IntersectionObserverEntry[] = [],\n    observer: IntersectionObserver\n  ) => {\n    /* istanbul ignore if */\n    if (!el._observe) return // Just in case, should never fire\n\n    const isIntersecting = entries.some(entry => entry.isIntersecting)\n\n    // If is not quiet or has already been\n    // initted, invoke the user callback\n    if (\n      handler && (\n        !modifiers.quiet ||\n        el._observe.init\n      ) && (\n        !modifiers.once ||\n        isIntersecting ||\n        !el._observe.init\n      )\n    ) {\n      handler(isIntersecting, entries, observer)\n    }\n\n    if (isIntersecting && modifiers.once) unmounted(el)\n    else el._observe.init = true\n  }, options)\n\n  el._observe = { init: false, observer }\n\n  observer.observe(el)\n}\n\nfunction unmounted (el: HTMLElement) {\n  /* istanbul ignore if */\n  if (!el._observe) return\n\n  el._observe.observer.unobserve(el)\n  delete el._observe\n}\n\nexport const Intersect: ObjectDirective<HTMLElement> = {\n  mounted,\n  unmounted,\n}\n\nexport default Intersect\n"]}]}