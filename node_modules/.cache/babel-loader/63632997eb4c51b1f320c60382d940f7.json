{"remainingRequest":"/home/hugo_leguillier/tinygram-2022-2023/front/node_modules/thread-loader/dist/cjs.js!/home/hugo_leguillier/tinygram-2022-2023/front/node_modules/babel-loader/lib/index.js!/home/hugo_leguillier/tinygram-2022-2023/front/node_modules/vuetify/lib/composables/layout.mjs","dependencies":[{"path":"/home/hugo_leguillier/tinygram-2022-2023/front/node_modules/vuetify/lib/composables/layout.mjs","mtime":1668093900332},{"path":"/home/hugo_leguillier/tinygram-2022-2023/front/babel.config.js","mtime":1668093862815},{"path":"/home/hugo_leguillier/tinygram-2022-2023/front/node_modules/@vue/cli-plugin-babel/node_modules/cache-loader/dist/cjs.js","mtime":1668093903975},{"path":"/home/hugo_leguillier/tinygram-2022-2023/front/node_modules/thread-loader/dist/cjs.js","mtime":1668093903990},{"path":"/home/hugo_leguillier/tinygram-2022-2023/front/node_modules/babel-loader/lib/index.js","mtime":1668093897906}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["../../src/composables/layout.ts"],"names":["convertToUnit","getUid","propsFactory","VuetifyLayoutKey","Symbol","makeLayoutProps","overlaps","type","default","fullHeight","Boolean","makeLayoutItemProps","name","String","priority","absolute","layout","inject","id","styles","onBeforeUnmount","generateLayers","previousLayer","top","left","right","bottom","layers","layer","ids","l","registered","position","positions","amount","layoutSizes","active","activeItems","parseInt","ref","priorities","computedOverlaps","computed","map","props","item","overlap","topPosition","bottomPosition","topAmount","bottomAmount","entries","sortedEntries","a","b","mainStyles","paddingLeft","paddingRight","paddingTop","paddingBottom","items","size","Number","getLayoutItem","provide","register","index","i","isHorizontal","isOppositeHorizontal","isOppositeVertical","elementSize","unregister","v","layoutClasses"],"mappings":"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","sourcesContent":["// Utilities\nimport { computed, inject, onBeforeUnmount, provide, ref } from 'vue'\nimport { convertToUnit, getUid, propsFactory } from '@/util'\n\n// Types\nimport type { InjectionKey, Prop, Ref } from 'vue'\n\ntype Position = 'top' | 'left' | 'right' | 'bottom'\n\ntype LayoutItem = {\n  id: string\n  top: number\n  bottom: number\n  left: number\n  right: number\n  size: number\n}\n\ninterface LayoutProvide {\n  register: (\n    id: string,\n    priority: Ref<number>,\n    position: Ref<Position>,\n    layoutSize: Ref<number | string>,\n    elementSize: Ref<number | string>,\n    active: Ref<boolean>\n  ) => Ref<Record<string, unknown>>\n  unregister: (id: string) => void\n  mainStyles: Ref<Record<string, unknown>>\n  getLayoutItem: (id: string) => LayoutItem | undefined\n  items: Ref<LayoutItem[]>\n}\n\nexport const VuetifyLayoutKey: InjectionKey<LayoutProvide> = Symbol.for('vuetify:layout')\n\nexport const makeLayoutProps = propsFactory({\n  overlaps: {\n    type: Array,\n    default: () => ([]),\n  } as Prop<string[]>,\n  fullHeight: Boolean,\n}, 'layout')\n\n// Composables\nexport const makeLayoutItemProps = propsFactory({\n  name: {\n    type: String,\n  },\n  priority: {\n    type: Number,\n    default: 0,\n  },\n  absolute: Boolean,\n}, 'layout-item')\n\nexport function useMain () {\n  const layout = inject(VuetifyLayoutKey)\n\n  if (!layout) throw new Error('Could not find injected Vuetify layout')\n\n  return layout\n}\n\nexport function useLayoutItem (\n  name: string | undefined,\n  priority: Ref<number>,\n  position: Ref<Position>,\n  layoutSize: Ref<number | string>,\n  elementSize: Ref<number | string>,\n  active: Ref<boolean>,\n) {\n  const layout = inject(VuetifyLayoutKey)\n\n  if (!layout) throw new Error('Could not find injected Vuetify layout')\n\n  const id = name ?? `layout-item-${getUid()}`\n\n  const styles = layout.register(id, priority, position, layoutSize, elementSize, active)\n\n  onBeforeUnmount(() => layout.unregister(id))\n\n  return styles\n}\n\nconst generateLayers = (\n  layout: string[],\n  registered: string[],\n  positions: Map<string, Ref<Position>>,\n  layoutSizes: Map<string, Ref<number | string>>,\n  activeItems: Map<string, Ref<boolean>>,\n) => {\n  let previousLayer = { top: 0, left: 0, right: 0, bottom: 0 }\n  const layers = [{ id: '', layer: { ...previousLayer } }]\n  const ids = !layout.length ? registered : layout.map(l => l.split(':')[0]).filter(l => registered.includes(l))\n  for (const id of ids) {\n    const position = positions.get(id)\n    const amount = layoutSizes.get(id)\n    const active = activeItems.get(id)\n    if (!position || !amount || !active) continue\n\n    const layer = {\n      ...previousLayer,\n      [position.value]: parseInt(previousLayer[position.value], 10) + (active.value ? parseInt(amount.value, 10) : 0),\n    }\n\n    layers.push({\n      id,\n      layer,\n    })\n\n    previousLayer = layer\n  }\n\n  return layers\n}\n\n// TODO: Remove undefined from layout and overlaps when vue typing for required: true prop is fixed\nexport function createLayout (props: { layout?: string[], overlaps?: string[], fullHeight?: boolean }) {\n  const registered = ref<string[]>([])\n  const positions = new Map<string, Ref<Position>>()\n  const layoutSizes = new Map<string, Ref<number | string>>()\n  const priorities = new Map<string, Ref<number>>()\n  const activeItems = new Map<string, Ref<boolean>>()\n\n  const computedOverlaps = computed(() => {\n    const map = new Map<string, { position: Position, amount: number }>()\n    const overlaps = props.overlaps ?? []\n    for (const overlap of overlaps.filter(item => item.includes(':'))) {\n      const [top, bottom] = overlap.split(':')\n      if (!registered.value.includes(top) || !registered.value.includes(bottom)) continue\n\n      const topPosition = positions.get(top)\n      const bottomPosition = positions.get(bottom)\n      const topAmount = layoutSizes.get(top)\n      const bottomAmount = layoutSizes.get(bottom)\n\n      if (!topPosition || !bottomPosition || !topAmount || !bottomAmount) continue\n\n      map.set(bottom, { position: topPosition.value, amount: parseInt(topAmount.value, 10) })\n      map.set(top, { position: bottomPosition.value, amount: -parseInt(bottomAmount.value, 10) })\n    }\n\n    return map\n  })\n\n  const layers = computed(() => {\n    const entries = [...priorities.entries()]\n    const sortedEntries = entries.sort(([, a], [, b]) => a.value - b.value).map(([id]) => id)\n    return generateLayers(sortedEntries, registered.value, positions, layoutSizes, activeItems)\n  })\n\n  const mainStyles = computed(() => {\n    const layer = layers.value[layers.value.length - 1].layer\n\n    return {\n      position: 'relative',\n      paddingLeft: convertToUnit(layer.left),\n      paddingRight: convertToUnit(layer.right),\n      paddingTop: convertToUnit(layer.top),\n      paddingBottom: convertToUnit(layer.bottom),\n    }\n  })\n\n  const items = computed(() => {\n    return layers.value.slice(1).map(({ id }, index) => {\n      const { layer } = layers.value[index]\n      const size = layoutSizes.get(id)\n\n      return {\n        id,\n        ...layer,\n        size: Number(size!.value),\n      }\n    })\n  })\n\n  const getLayoutItem = (id: string) => {\n    return items.value.find(item => item.id === id)\n  }\n\n  provide(VuetifyLayoutKey, {\n    register: (\n      id: string,\n      priority: Ref<number>,\n      position: Ref<Position>,\n      layoutSize: Ref<number | string>,\n      elementSize: Ref<number | string>,\n      active: Ref<boolean>\n    ) => {\n      priorities.set(id, priority)\n      positions.set(id, position)\n      layoutSizes.set(id, layoutSize)\n      activeItems.set(id, active)\n      registered.value.push(id)\n\n      return computed(() => {\n        const index = items.value.findIndex(i => i.id === id)\n\n        if (index < 0) throw new Error(`Layout item \"${id}\" is missing from layout prop`)\n\n        const item = items.value[index]\n\n        if (!item) throw new Error(`Could not find layout item \"${id}`)\n\n        const overlap = computedOverlaps.value.get(id)\n        if (overlap) {\n          item[overlap.position] += overlap.amount\n        }\n\n        const isHorizontal = position.value === 'left' || position.value === 'right'\n        const isOppositeHorizontal = position.value === 'right'\n        const isOppositeVertical = position.value === 'bottom'\n\n        return {\n          [position.value]: 0,\n          height: isHorizontal ? `calc(100% - ${item.top}px - ${item.bottom}px)` : `${elementSize.value}px`,\n          marginLeft: isOppositeHorizontal ? undefined : `${item.left}px`,\n          marginRight: isOppositeHorizontal ? `${item.right}px` : undefined,\n          marginTop: position.value !== 'bottom' ? `${item.top}px` : undefined,\n          marginBottom: position.value !== 'top' ? `${item.bottom}px` : undefined,\n          width: !isHorizontal ? `calc(100% - ${item.left}px - ${item.right}px)` : `${elementSize.value}px`,\n          zIndex: layers.value.length - index,\n          transform: `translate${isHorizontal ? 'X' : 'Y'}(${(active.value ? 0 : -110) * (isOppositeHorizontal || isOppositeVertical ? -1 : 1)}%)`,\n        }\n      })\n    },\n    unregister: (id: string) => {\n      priorities.delete(id)\n      positions.delete(id)\n      layoutSizes.delete(id)\n      activeItems.delete(id)\n      registered.value = registered.value.filter(v => v !== id)\n    },\n    mainStyles,\n    getLayoutItem,\n    items,\n  })\n\n  const layoutClasses = computed(() => [\n    'v-layout',\n    { 'v-layout--full-height': props.fullHeight },\n  ])\n\n  return {\n    layoutClasses,\n    getLayoutItem,\n    items,\n  }\n}\n"]}]}